var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': 'About.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'w15', 'text': '\n \n 為何學習計算機程式需要建立個人倉儲? \n A:方便課程管理及使用。 \n 全球資訊網能夠提供甚麼功能或有什麼優點? \n A:資訊時代發展的核心，也是數十億人在網際網路上進行互動和瀏覽器的主要工具 \n Replit, stud.cycu.org 與 localhost 分別代表甚麼? \n A1:Replit是提供線上集成開發環境服務的公司，可以線上維護Github。 \n A2:stud.cycu.org是老師寫的，功能不多，但可以協助我們維護網站。 \n A3:localhost是我們用cms教出來的另一種維護網站的方式，只需要更新時上網即可。 \n https, ssh 到底提供使用者那些功能或優點? \n A1:https是一種網絡安全傳輸協議，可實現瀏覽器和網站服務器數據傳輸加密 \n A2:ssh是一種加密的網路傳輸協定，可在不安全的網路中為網路服務提供安全的傳輸環境 \n Brython 與 Python 有甚麼差別? \n A:不清楚，似乎Brython比較古老。 \n 能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼? \n A:代表程式能力很強 \n 變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼? \n A:增加計算機程式的知識 \n \n \n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w15-綠色方塊', 'text': '\n \n  給定 brython_div1 division 標註  \n 以下是繞8字形行走的綠色小方塊 \n \n  加入啟動按鈕後的 Rect 行走程式原始碼  \n \n 這周我學會了如何更改綠色小方塊的行動路徑 \n', 'tags': '', 'url': 'w15-綠色方塊.html'}, {'title': 'W14', 'text': '這是按鈕，輸入甚麼數字就會跑出來 \n  \n在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑\n \n \n \n  啟動 Brython  \n \n \n \n  利用 html 建立一個 id="btn1" 的按鈕  \n 取使用者輸入 \n \n 我學會了新增按鈕 \n \n \n \n', 'tags': '', 'url': 'W14.html'}, {'title': 'w13', 'text': '溫度轉換程式 \n f = c*9/5 + 32 c = (f-32)*5/9 \n \n ex2 \n \'\'\'\nf = c*9/5 + 32\nc = (f-32)*5/9\n\'\'\'\nc = input("請輸入攝氏溫度值")\nprint(type(c))\nc = float(c)\nprint("你輸入的攝氏溫度" + str(c) , "等於華氏溫度" + str(c*9/5+32)) \n \n 我這周對於程式碼有更深的認識了 \n', 'tags': '', 'url': 'w13.html'}, {'title': 'w12', 'text': 'ex1 \n # Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回\nuser_input_temp = input("請輸入攝氏溫度值:")\n# 接著列出 user_input_temp 變數的資料型別\nprint(type(user_input_temp)) \n ex2 \n # Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回\nuser_input_temp = input("請輸入攝氏溫度值:")\n# 接著列出 user_input_temp 變數的資料型別\nprint(type(user_input_temp))\n# 到這裡已知利用 input() 函式將傳回字串, 接著以 float() 將字串轉為浮點數\nuser_input_temp = float(user_input_temp)\n# 因為攝氏溫度乘上 9/5 之後再加上 32 就可以得到對應的華氏溫度值\nFahrenheit = (user_input_temp*9/5) + 32\n# 到這裡, Fahrenheit 資料型別為浮點數, 而 user_input_temp 在第 8 行也轉為浮點數\n# 要將兩個浮點數與字串相加, 都必須透過 str() 轉為字串\nprint("攝氏 " + str(user_input_temp) + " 度, 等於華氏 " + str(Fahrenheit) + " 度.") \n \n 我學會了如何加入超連結及程式碼 \n', 'tags': '', 'url': 'w12.html'}, {'title': 'W10', 'text': '列出缺考名單及分數 \n import ast\n \n# get stud_list first\n \ndef get_stud(c_name):\n    courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}\n    #c_name = "1b"\n    c = courses[c_name]\n    url = "https://nfu.cycu.org/?semester=1111&courseno=" + c + "&column=True"\n    data = open(url).read().split("\\n")\n    stud = data[:-1]\n    return stud\n     \ncp_stud = get_stud("1b")\n \n# get w10 quiz result\ncp_w10_quiz_url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a6825f13b1bb0b61e09e74dd117729eefe1d947f/20221110_cp1b_w10_quiz.json"\n \ndef get_score(url):\n    json_data = open(url).read()\n    big_dict = ast.literal_eval(json_data)\n    data = big_dict["body"]["testuser"]\n    quiz_dict = {}\n    for i in data:\n        stud_id = data[i]["user_name"]\n        stud_score = int(float(data[i]["total_score"]))\n        quiz_dict[stud_id] = stud_score\n    return quiz_dict\n     \ncp_quiz = get_score(cp_w10_quiz_url)\ncp_abs = []\nfor stud in cp_stud:\n    try:\n        print(stud, cp_quiz[stud])\n    except:\n        # 缺考者沒有 quiz 成績\n        print(stud, "缺")\n        cp_abs.append(stud)\n# 列出缺考名單\nprint("="*20)\nprint("以下為 w10 缺考名單:")\nfor stud in cp_abs:\n    print(stud) \n HW W10-2 (for迴圈) \n A = [i for i in range(1,10,2)]\nprint(A) \n 我對於for迴圈有更深的理解了 \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W6', 'text': '抽點程式 \xa0\xa0\xa0 抽點五個 \n # Python 的註解分為單行註解與多行, 單行註解可在字串前方放入 #\n\'\'\'多行註解則可以透過三個單引號前後標註字串或文字段落內容, \n也可以使用三個雙引號作為多行註解的標註\n\'\'\'\n# 使用 import 導入 random 模組, 隨後就可以直接引用 random 模組的方法\nimport random\ncp1b = "0761"\n# 宣告 url 變數值為字串, 此字串為取得 cp2022 1a 選課成員名單\nurl = "https://nfu.cycu.org/?semester=1111&courseno=" + cp1b + "&column=True"\n# 利用上述已經宣告的 url 變數字串值, 作為 open() 函式的輸入變數, 可以連結至該網站\n# 連接 url 所代表字串的網站後, 再利用 read() 函式讀取該網站的內容, 即可取得 cp2022 1a 的選課成員學號\n# url 所屬的網站, 乃 69 中的一台虛擬主機 8/10ff-0-1-2, 並利用 Get 從教務主機取回課程註冊成員學號\n# 由於所取回的學號以跳行符號隔開, 因此取回的學號資料行, 再利用 split() 函式, 以 \\n 跳行符號分割後\n# 所對應到 data 的資料型別將會是數列\ndata = open(url).read().split("\\n")\n# 經過檢查 data 數列, 發現最後一個 element 為空字串, 因此利用 [:-1] 去掉數列的最後一個元素, -1 代表數列最後一個元素的索引\n#print(data[:-1])\n# 設定一個變數, 與修課成員學號數列對應\nstud = data[:-1]\n# 使用 random 模組中的 shuffle() 函式, 以隨機的方式排列 stud 數列內容\nrandom.shuffle(stud)\n# 設定 num 與 5 對應, 或將 5 整數值存入 num 變數所對應的記憶體位址\nnum = 5\n# 利用 for 重複迴圈與 range() 變數, 列印出 (利用 print() 函式) 已經隨機排列次序的 stud 數列的最前面 num 個學號值\nfor i in range(num):\n    print(stud[i]) \n \n 1a 學員 \n from browser import document, html\n\nbrython_div1 = document["brython_div2"]\n"""\nbrython_div1 <= html.BUTTON("hello")\nbrython_div1 <= html.BR()\nbrython_div1 <= html.A("google", href="https://google.com")\n"""\n\nurl = "https://mde.tw/studlist/2022fall/1a.txt"\ndata = open(url).read().split("\\n")\nmdecp2022 = "https://mdecp2022.github.io/site-"\ndata = data[1:-1]\nfor i in data:\n    stud = i.split("\\t")\n    stud_num = stud[0]\n    github_acc = stud[1]\n    #print(stud_num, github_acc)\n    if github_acc == "":\n        github_acc = stud_num\n    site = mdecp2022 + github_acc\n    link = html.A(stud_num, href=site)\n    brython_div1 <= link\n    brython_div1 <= html.BR() \n \n 看完W6，我思考了一下，我不會結合抽點及列出靜態網站 \n \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W5', 'text': '密碼亂數 \n # 導入亂數模組\nimport random\n# 導入字串模組\nimport string\n# 利用 def 關鍵字定義函式\n# 函式的輸入變數可以設定初始值\ndef password_generator(size=4, chars=string.ascii_lowercase + string.digits):\n    # 函式內以多行註解說明函式功能\n    """Generate random password\n    """\n    # 利用 return 關鍵字將所產生的亂數字串傳回\n    return \'\'.join(random.choice(chars) for _ in range(size))\n# 建立一個變數與隨後的字串對應\npass_string = "abcdefghkmnpqrstuwxyz123456789"\ncp_num = ["0747", "0761"]\ncad_num = ["0773", "0786"]\ndef gen_acc_pass(course, course_num):\n    stud_list =[]\n    for num in course_num:\n        url = "https://nfu.cycu.org/?semester=1111&courseno=" + num + "&column=True"\n        class_list = open(url).read().split("\\n")[:-1]\n        stud_list += class_list\n        #print(stud_list)\n    for stud_num in stud_list:\n        password = password_generator(4, pass_string)\n        #print(password)\n        account = course + stud_num\n        #print(account)\n        print(stud_num + "\\t" + account + "\\t" + password)\ngen_acc_pass("cp", cp_num)\ngen_acc_pass("cad", cad_num) \n \n', 'tags': '', 'url': 'W5.html'}, {'title': '學習心得', 'text': 'W1:中秋放假 \n W2:學習設定網路及建立github帳號。進度跟得上，但有太多新名詞不懂。 \n W3:註冊考試帳號，學習replit使用方法。進度跟得上，就是有點不知道在幹嘛。 \n W4:下載python並學習使用。進度稍微落後，載了但不太會用。 \n W5:學習使用localhost維護動態網站。進度落後，課程有聽沒有懂。 \n W6:試著在動態網站中加入作業。進度落後，只會更改名稱不會加東西。 \n W7:從cadlab網路設定到雙支援可攜環境session配置說明。進度嚴重落後。根本聽不懂。 \n W8:教學stud.cycu.org使用方法。做到一半卡住，就沒繼續做了。 \n W9:期中考試。 \n W10:在個人網站中加入兩樣作業。我成功修改for迴圈達到老師需求。 \n W12:前面課程回顧，並布置作業。這次我重新開始學習，進度都有跟上，作業也完成了。 \n W13:教學github token、溫度轉換程式，並布置作業。進度都有跟上，作業也有完成。', 'tags': '', 'url': '學習心得.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束 ', 'tags': '', 'url': 'Brython.html'}]};